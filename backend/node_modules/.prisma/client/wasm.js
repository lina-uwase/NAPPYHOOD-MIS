
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  role: 'role',
  phone: 'phone',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  profilePicture: 'profilePicture'
};

exports.Prisma.CustomerScalarFieldEnum = {
  id: 'id',
  fullName: 'fullName',
  gender: 'gender',
  location: 'location',
  district: 'district',
  province: 'province',
  phone: 'phone',
  email: 'email',
  birthDay: 'birthDay',
  birthMonth: 'birthMonth',
  birthYear: 'birthYear',
  loyaltyPoints: 'loyaltyPoints',
  totalSpent: 'totalSpent',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  isActive: 'isActive',
  lastSale: 'lastSale',
  saleCount: 'saleCount'
};

exports.Prisma.ServiceScalarFieldEnum = {
  id: 'id',
  name: 'name',
  category: 'category',
  description: 'description',
  singlePrice: 'singlePrice',
  combinedPrice: 'combinedPrice',
  childPrice: 'childPrice',
  childCombinedPrice: 'childCombinedPrice',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SaleScalarFieldEnum = {
  id: 'id',
  customerId: 'customerId',
  saleDate: 'saleDate',
  totalAmount: 'totalAmount',
  discountAmount: 'discountAmount',
  finalAmount: 'finalAmount',
  loyaltyPointsEarned: 'loyaltyPointsEarned',
  notes: 'notes',
  isCompleted: 'isCompleted',
  createdById: 'createdById',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  birthMonthDiscount: 'birthMonthDiscount',
  ownShampooDiscount: 'ownShampooDiscount',
  paymentMethod: 'paymentMethod'
};

exports.Prisma.SaleServiceScalarFieldEnum = {
  id: 'id',
  saleId: 'saleId',
  serviceId: 'serviceId',
  quantity: 'quantity',
  unitPrice: 'unitPrice',
  totalPrice: 'totalPrice',
  isChild: 'isChild',
  isCombined: 'isCombined',
  createdAt: 'createdAt'
};

exports.Prisma.SaleStaffScalarFieldEnum = {
  id: 'id',
  saleId: 'saleId',
  staffId: 'staffId',
  serviceId: 'serviceId',
  createdAt: 'createdAt'
};

exports.Prisma.DiscountRuleScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type: 'type',
  value: 'value',
  isPercentage: 'isPercentage',
  isActive: 'isActive',
  description: 'description',
  minAmount: 'minAmount',
  maxDiscount: 'maxDiscount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SaleDiscountScalarFieldEnum = {
  id: 'id',
  saleId: 'saleId',
  discountRuleId: 'discountRuleId',
  discountAmount: 'discountAmount',
  createdAt: 'createdAt'
};

exports.Prisma.CustomerDiscountScalarFieldEnum = {
  id: 'id',
  customerId: 'customerId',
  discountRuleId: 'discountRuleId',
  usedAt: 'usedAt',
  discountAmount: 'discountAmount'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  ADMIN: 'ADMIN',
  MANAGER: 'MANAGER',
  STAFF: 'STAFF'
};

exports.Gender = exports.$Enums.Gender = {
  MALE: 'MALE',
  FEMALE: 'FEMALE',
  OTHER: 'OTHER'
};

exports.ServiceCategory = exports.$Enums.ServiceCategory = {
  HAIR_TREATMENTS: 'HAIR_TREATMENTS',
  TWIST_HAIRSTYLE: 'TWIST_HAIRSTYLE',
  CORNROWS_BRAIDS: 'CORNROWS_BRAIDS',
  STRAWSET_CURLS: 'STRAWSET_CURLS',
  STYLING_SERVICE: 'STYLING_SERVICE',
  SPECIAL_OFFERS: 'SPECIAL_OFFERS'
};

exports.DiscountType = exports.$Enums.DiscountType = {
  SIXTH_VISIT: 'SIXTH_VISIT',
  BIRTHDAY_MONTH: 'BIRTHDAY_MONTH',
  LOYALTY_POINTS: 'LOYALTY_POINTS',
  SERVICE_COMBO: 'SERVICE_COMBO',
  BRING_OWN_PRODUCT: 'BRING_OWN_PRODUCT'
};

exports.PaymentMethod = exports.$Enums.PaymentMethod = {
  CASH: 'CASH',
  MOBILE_MONEY: 'MOBILE_MONEY',
  BANK_CARD: 'BANK_CARD',
  BANK_TRANSFER: 'BANK_TRANSFER'
};

exports.Prisma.ModelName = {
  User: 'User',
  Customer: 'Customer',
  Service: 'Service',
  Sale: 'Sale',
  SaleService: 'SaleService',
  SaleStaff: 'SaleStaff',
  DiscountRule: 'DiscountRule',
  SaleDiscount: 'SaleDiscount',
  CustomerDiscount: 'CustomerDiscount'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/lina/Documents/Mine/NAPPYHOOD MIS/backend/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/lina/Documents/Mine/NAPPYHOOD MIS/backend/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id             String      @id @default(cuid())\n  name           String\n  email          String      @unique\n  password       String\n  role           Role        @default(STAFF)\n  phone          String?\n  isActive       Boolean     @default(true)\n  createdAt      DateTime    @default(now())\n  updatedAt      DateTime    @updatedAt\n  profilePicture String?\n  staffSales     SaleStaff[]\n  sales          Sale[]\n\n  @@map(\"users\")\n}\n\nmodel Customer {\n  id            String             @id @default(cuid())\n  fullName      String\n  gender        Gender\n  location      String\n  district      String\n  province      String\n  phone         String             @unique\n  email         String?\n  birthDay      Int\n  birthMonth    Int\n  birthYear     Int?\n  loyaltyPoints Int                @default(0)\n  totalSpent    Decimal            @default(0) @db.Decimal(10, 2)\n  createdAt     DateTime           @default(now())\n  updatedAt     DateTime           @updatedAt\n  isActive      Boolean            @default(true)\n  lastSale      DateTime?\n  saleCount     Int                @default(0)\n  discounts     CustomerDiscount[]\n  sales         Sale[]\n\n  @@map(\"customers\")\n}\n\nmodel Service {\n  id                 String          @id @default(cuid())\n  name               String          @unique\n  category           ServiceCategory\n  description        String?\n  singlePrice        Decimal         @db.Decimal(10, 2)\n  combinedPrice      Decimal?        @db.Decimal(10, 2)\n  childPrice         Decimal?        @db.Decimal(10, 2)\n  childCombinedPrice Decimal?        @db.Decimal(10, 2)\n  isActive           Boolean         @default(true)\n  createdAt          DateTime        @default(now())\n  updatedAt          DateTime        @updatedAt\n  saleServices       SaleService[]\n\n  @@map(\"services\")\n}\n\nmodel Sale {\n  id                  String         @id @default(cuid())\n  customerId          String\n  saleDate            DateTime       @default(now())\n  totalAmount         Decimal        @db.Decimal(10, 2)\n  discountAmount      Decimal        @default(0) @db.Decimal(10, 2)\n  finalAmount         Decimal        @db.Decimal(10, 2)\n  loyaltyPointsEarned Int            @default(0)\n  notes               String?\n  isCompleted         Boolean        @default(false)\n  createdById         String\n  createdAt           DateTime       @default(now())\n  updatedAt           DateTime       @updatedAt\n  birthMonthDiscount  Boolean        @default(false)\n  ownShampooDiscount  Boolean        @default(false)\n  paymentMethod       PaymentMethod  @default(CASH)\n  discounts           SaleDiscount[]\n  services            SaleService[]\n  staff               SaleStaff[]\n  createdBy           User           @relation(fields: [createdById], references: [id])\n  customer            Customer       @relation(fields: [customerId], references: [id])\n\n  @@map(\"sales\")\n}\n\nmodel SaleService {\n  id         String   @id @default(cuid())\n  saleId     String\n  serviceId  String\n  quantity   Int      @default(1)\n  unitPrice  Decimal  @db.Decimal(10, 2)\n  totalPrice Decimal  @db.Decimal(10, 2)\n  isChild    Boolean  @default(false)\n  isCombined Boolean  @default(false)\n  createdAt  DateTime @default(now())\n  sale       Sale     @relation(fields: [saleId], references: [id])\n  service    Service  @relation(fields: [serviceId], references: [id])\n\n  @@map(\"sale_services\")\n}\n\nmodel SaleStaff {\n  id        String   @id @default(cuid())\n  saleId    String\n  staffId   String\n  serviceId String?\n  createdAt DateTime @default(now())\n  sale      Sale     @relation(fields: [saleId], references: [id])\n  staff     User     @relation(fields: [staffId], references: [id])\n\n  @@map(\"sale_staff\")\n}\n\nmodel DiscountRule {\n  id                String             @id @default(cuid())\n  name              String             @unique\n  type              DiscountType\n  value             Decimal            @db.Decimal(5, 2)\n  isPercentage      Boolean            @default(true)\n  isActive          Boolean            @default(true)\n  description       String?\n  minAmount         Decimal?           @db.Decimal(10, 2)\n  maxDiscount       Decimal?           @db.Decimal(10, 2)\n  createdAt         DateTime           @default(now())\n  updatedAt         DateTime           @updatedAt\n  customerDiscounts CustomerDiscount[]\n  saleDiscounts     SaleDiscount[]\n\n  @@map(\"discount_rules\")\n}\n\nmodel SaleDiscount {\n  id             String       @id @default(cuid())\n  saleId         String\n  discountRuleId String\n  discountAmount Decimal      @db.Decimal(10, 2)\n  createdAt      DateTime     @default(now())\n  discountRule   DiscountRule @relation(fields: [discountRuleId], references: [id])\n  sale           Sale         @relation(fields: [saleId], references: [id])\n\n  @@map(\"sale_discounts\")\n}\n\nmodel CustomerDiscount {\n  id             String       @id @default(cuid())\n  customerId     String\n  discountRuleId String\n  usedAt         DateTime     @default(now())\n  discountAmount Decimal      @db.Decimal(10, 2)\n  customer       Customer     @relation(fields: [customerId], references: [id])\n  discountRule   DiscountRule @relation(fields: [discountRuleId], references: [id])\n\n  @@map(\"customer_discounts\")\n}\n\nenum Role {\n  ADMIN\n  MANAGER\n  STAFF\n}\n\nenum Gender {\n  MALE\n  FEMALE\n  OTHER\n}\n\nenum ServiceCategory {\n  HAIR_TREATMENTS\n  TWIST_HAIRSTYLE\n  CORNROWS_BRAIDS\n  STRAWSET_CURLS\n  STYLING_SERVICE\n  SPECIAL_OFFERS\n}\n\nenum DiscountType {\n  SIXTH_VISIT\n  BIRTHDAY_MONTH\n  LOYALTY_POINTS\n  SERVICE_COMBO\n  BRING_OWN_PRODUCT\n}\n\nenum PaymentMethod {\n  CASH\n  MOBILE_MONEY\n  BANK_CARD\n  BANK_TRANSFER\n}\n",
  "inlineSchemaHash": "e0598078ad58efa0e6c7fdd3e189d6e478737765f9ae7a0c590ea7386d3d1327",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"profilePicture\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"staffSales\",\"kind\":\"object\",\"type\":\"SaleStaff\",\"relationName\":\"SaleStaffToUser\"},{\"name\":\"sales\",\"kind\":\"object\",\"type\":\"Sale\",\"relationName\":\"SaleToUser\"}],\"dbName\":\"users\"},\"Customer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fullName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gender\",\"kind\":\"enum\",\"type\":\"Gender\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"district\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"province\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"birthDay\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"birthMonth\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"birthYear\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"loyaltyPoints\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalSpent\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"lastSale\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"saleCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"discounts\",\"kind\":\"object\",\"type\":\"CustomerDiscount\",\"relationName\":\"CustomerToCustomerDiscount\"},{\"name\":\"sales\",\"kind\":\"object\",\"type\":\"Sale\",\"relationName\":\"CustomerToSale\"}],\"dbName\":\"customers\"},\"Service\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"ServiceCategory\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"singlePrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"combinedPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"childPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"childCombinedPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"saleServices\",\"kind\":\"object\",\"type\":\"SaleService\",\"relationName\":\"SaleServiceToService\"}],\"dbName\":\"services\"},\"Sale\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"saleDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"totalAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"discountAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"finalAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"loyaltyPointsEarned\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isCompleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"birthMonthDiscount\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"ownShampooDiscount\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"paymentMethod\",\"kind\":\"enum\",\"type\":\"PaymentMethod\"},{\"name\":\"discounts\",\"kind\":\"object\",\"type\":\"SaleDiscount\",\"relationName\":\"SaleToSaleDiscount\"},{\"name\":\"services\",\"kind\":\"object\",\"type\":\"SaleService\",\"relationName\":\"SaleToSaleService\"},{\"name\":\"staff\",\"kind\":\"object\",\"type\":\"SaleStaff\",\"relationName\":\"SaleToSaleStaff\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SaleToUser\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToSale\"}],\"dbName\":\"sales\"},\"SaleService\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"saleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unitPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"totalPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"isChild\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isCombined\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sale\",\"kind\":\"object\",\"type\":\"Sale\",\"relationName\":\"SaleToSaleService\"},{\"name\":\"service\",\"kind\":\"object\",\"type\":\"Service\",\"relationName\":\"SaleServiceToService\"}],\"dbName\":\"sale_services\"},\"SaleStaff\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"saleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"staffId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sale\",\"kind\":\"object\",\"type\":\"Sale\",\"relationName\":\"SaleToSaleStaff\"},{\"name\":\"staff\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SaleStaffToUser\"}],\"dbName\":\"sale_staff\"},\"DiscountRule\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"DiscountType\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"isPercentage\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"minAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"maxDiscount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"customerDiscounts\",\"kind\":\"object\",\"type\":\"CustomerDiscount\",\"relationName\":\"CustomerDiscountToDiscountRule\"},{\"name\":\"saleDiscounts\",\"kind\":\"object\",\"type\":\"SaleDiscount\",\"relationName\":\"DiscountRuleToSaleDiscount\"}],\"dbName\":\"discount_rules\"},\"SaleDiscount\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"saleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discountRuleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discountAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"discountRule\",\"kind\":\"object\",\"type\":\"DiscountRule\",\"relationName\":\"DiscountRuleToSaleDiscount\"},{\"name\":\"sale\",\"kind\":\"object\",\"type\":\"Sale\",\"relationName\":\"SaleToSaleDiscount\"}],\"dbName\":\"sale_discounts\"},\"CustomerDiscount\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discountRuleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"usedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"discountAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToCustomerDiscount\"},{\"name\":\"discountRule\",\"kind\":\"object\",\"type\":\"DiscountRule\",\"relationName\":\"CustomerDiscountToDiscountRule\"}],\"dbName\":\"customer_discounts\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

