// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(STAFF)
  phone     String?
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  visits    Visit[]
  staffVisits VisitStaff[]

  @@map("users")
}

model Customer {
  id          String    @id @default(cuid())
  fullName    String
  gender      Gender
  location    String    // informal name like nyamirambo, karuruma
  district    String
  province    String
  phone       String    @unique
  email       String?
  birthDay    Int
  birthMonth  Int
  birthYear   Int?
  visitCount  Int       @default(0)
  loyaltyPoints Int     @default(0)
  totalSpent    Decimal @default(0) @db.Decimal(10, 2)
  lastVisit     DateTime?
  isActive     Boolean  @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relations
  visits      Visit[]
  discounts   CustomerDiscount[]

  @@map("customers")
}

model Service {
  id                   String  @id @default(cuid())
  name                 String  @unique
  category             ServiceCategory
  description          String
  singlePrice          Decimal @db.Decimal(10, 2)
  combinedPrice        Decimal? @db.Decimal(10, 2)
  childPrice           Decimal? @db.Decimal(10, 2)
  childCombinedPrice   Decimal? @db.Decimal(10, 2)
  duration             Int     // duration in minutes
  isActive             Boolean @default(true)
  isComboEligible      Boolean @default(false) // for shampoo combo discount
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  // Relations
  visitServices       VisitService[]

  @@map("services")
}

model Visit {
  id              String    @id @default(cuid())
  customerId      String
  visitDate       DateTime  @default(now())
  totalAmount     Decimal   @db.Decimal(10, 2)
  discountAmount  Decimal   @default(0) @db.Decimal(10, 2)
  finalAmount     Decimal   @db.Decimal(10, 2)
  loyaltyPointsEarned Int   @default(0)
  notes           String?
  isCompleted     Boolean   @default(false)
  createdById     String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  // Relations
  customer        Customer  @relation(fields: [customerId], references: [id])
  createdBy       User      @relation(fields: [createdById], references: [id])
  services        VisitService[]
  staff           VisitStaff[]
  discounts       VisitDiscount[]

  @@map("visits")
}

model VisitService {
  id          String  @id @default(cuid())
  visitId     String
  serviceId   String
  quantity    Int     @default(1)
  unitPrice   Decimal @db.Decimal(10, 2)
  totalPrice  Decimal @db.Decimal(10, 2)
  isChild     Boolean @default(false)
  isCombined  Boolean @default(false) // combined with shampoo
  createdAt   DateTime @default(now())

  // Relations
  visit       Visit   @relation(fields: [visitId], references: [id])
  service     Service @relation(fields: [serviceId], references: [id])

  @@map("visit_services")
}

model VisitStaff {
  id        String   @id @default(cuid())
  visitId   String
  staffId   String
  serviceId String?  // specific service this staff worked on
  createdAt DateTime @default(now())

  // Relations
  visit     Visit @relation(fields: [visitId], references: [id])
  staff     User  @relation(fields: [staffId], references: [id])

  @@map("visit_staff")
}

model DiscountRule {
  id            String      @id @default(cuid())
  name          String      @unique
  type          DiscountType
  value         Decimal     @db.Decimal(5, 2) // percentage or fixed amount
  isPercentage  Boolean     @default(true)
  isActive      Boolean     @default(true)
  description   String?
  minAmount     Decimal?    @db.Decimal(10, 2)
  maxDiscount   Decimal?    @db.Decimal(10, 2)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  // Relations
  visitDiscounts VisitDiscount[]
  customerDiscounts CustomerDiscount[]

  @@map("discount_rules")
}

model VisitDiscount {
  id              String      @id @default(cuid())
  visitId         String
  discountRuleId  String
  discountAmount  Decimal     @db.Decimal(10, 2)
  createdAt       DateTime    @default(now())

  // Relations
  visit           Visit       @relation(fields: [visitId], references: [id])
  discountRule    DiscountRule @relation(fields: [discountRuleId], references: [id])

  @@map("visit_discounts")
}

model CustomerDiscount {
  id              String      @id @default(cuid())
  customerId      String
  discountRuleId  String
  usedAt          DateTime    @default(now())
  discountAmount  Decimal     @db.Decimal(10, 2)

  // Relations
  customer        Customer    @relation(fields: [customerId], references: [id])
  discountRule    DiscountRule @relation(fields: [discountRuleId], references: [id])

  @@map("customer_discounts")
}

enum Role {
  ADMIN
  MANAGER
  STAFF
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

enum ServiceCategory {
  HAIR_TREATMENTS
  TWIST_HAIRSTYLE
  CORNROWS_BRAIDS
  STRAWSET_CURLS
  STYLING_SERVICE
  SPECIAL_OFFERS
}

enum DiscountType {
  SIXTH_VISIT
  BIRTHDAY_MONTH
  LOYALTY_POINTS
  SERVICE_COMBO
  BRING_OWN_PRODUCT
}